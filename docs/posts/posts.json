[
  {
    "path": "posts/2022-02-10-workwithmedievalnetworks/",
    "title": "Work_with_Medieval_Networks",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Noah Milstein",
        "url": {}
      }
    ],
    "date": "2022-02-10",
    "categories": [],
    "contents": "\n\n\nlibrary(readxl)\nlibrary(igraph)\nlibrary(statnet)\nlibrary(network)\nlibrary(tidyverse)\n\n\n\n\n\nwars_in_medieval_2 <- read_excel(\"~/Desktop/Spring 2022/Networks/wars_in_medieval_2.xlsx\")\n\nwars_in_medieval_2$\"Out-list\" <- sapply(wars_in_medieval_2$\"Out-list\",\n                                    function(x) { gsub(\"[\\r\\n]\", \"\", x) })\nwars_in_medieval_2$\"In-list\"<- sapply(wars_in_medieval_2$\"In-list\",\n                                    function(x) { gsub(\"[\\r\\n]\", \"\", x) })\n\nwars_in_medieval_2\n\n\n# A tibble: 138 × 2\n   `In-list`         `Out-list`               \n   <chr>             <chr>                    \n 1 County of Apulia  Principality of Salerno  \n 2 County of Aversa  Principality of Salerno  \n 3 Kingdom of Sicily Principality of Salerno  \n 4 County of Apulia  Principality of Benevento\n 5 County of Aversa  Principality of Benevento\n 6 Kingdom of Sicily Principality of Benevento\n 7 County of Apulia  Principality of Capua    \n 8 County of Aversa  Principality of Capua    \n 9 Kingdom of Sicily Principality of Capua    \n10 County of Apulia  Republic of Amalfi       \n# … with 128 more rows\n\n\n\nwars_in_medieval_2_test <- data.frame(ThreadID = c(wars_in_medieval_2$\"In-list\"),\n                 AuthorID = c(wars_in_medieval_2$\"Out-list\"))\nwars_in_medieval_2_test_2 <- dplyr::inner_join(wars_in_medieval_2_test, wars_in_medieval_2_test, by = \"ThreadID\")[,-1]\nwars_in_medieval_2_test_3 <- apply(wars_in_medieval_2_test_2, 2, as.character)\n\n\n\n\n\nset.seed(2)\n\nwars_in_medieval_2.ig<-graph_from_data_frame(wars_in_medieval_2)\n\nclp <- cluster_label_prop(wars_in_medieval_2.ig)\n\nplot(clp, wars_in_medieval_2.ig, vertex.size=2,  edge.arrow.size=.1, vertex.color=\"gold\", vertex.size=20, vertex.frame.color=\"gray\", vertex.label.color=\"black\", vertex.label.cex=0.3, vertex.label.dist=2, edge.curved=0.2)\n\n\n\n\n\n\nset.seed(2)\n\n\nwars_in_medieval_2.ig<-graph_from_data_frame(wars_in_medieval_2)\n\nclp <- cluster_label_prop(wars_in_medieval_2.ig)\n\nplot(clp, wars_in_medieval_2.ig, vertex.size=2,  edge.arrow.size=.1, vertex.color=\"gold\", vertex.size=20, vertex.frame.color=\"gray\", vertex.label.color=\"black\", vertex.label.cex=0.3, vertex.label.dist=2, edge.curved=0.2)\n\n\n\n\n\n\nset.seed(2)\n\nmedieval_wars_3 <- read_excel(\"~/Desktop/Spring 2022/Networks/medieval_wars_2.xlsx\")\n\nwars_in_medieval_3_test <- data.frame(ThreadID = c(medieval_wars_3$\"In\"),\n                 AuthorID = c(medieval_wars_3$\"Out\"))\nwars_in_medieval_3_test_2 <- dplyr::inner_join(wars_in_medieval_3_test, wars_in_medieval_3_test, by = \"ThreadID\")[,-1]\nwars_in_medieval_3_test_3 <- apply(wars_in_medieval_3_test_2, 2, as.character)\n\nwars_in_medieval_3.ig<-graph_from_data_frame(medieval_wars_3)\n\nclp_med3 <- cluster_label_prop(wars_in_medieval_3.ig)\n\nplot(clp_med3, wars_in_medieval_3.ig, vertex.size=2,  edge.arrow.size=.1, vertex.color=\"gold\", vertex.size=20, vertex.frame.color=\"gray\", vertex.label.color=\"black\", vertex.label.cex=0.3, vertex.label.dist=2, edge.curved=0.2)\n\n\n\n\n\n\nigraph::dyad.census(wars_in_medieval_2.ig)\n\n\n$mut\n[1] 2\n\n$asym\n[1] 134\n\n$null\n[1] 4520\n\n\n\nigraph::triad.census(wars_in_medieval_2.ig)\n\n\n [1] 135520  10804    510    278    146    129     11     27     13\n[10]      0      1      0      0      1      0      0\n\n\n\ntransitivity(wars_in_medieval_2.ig, type=\"global\")\n\n\n[1] 0.06624606\n\ntransitivity(wars_in_medieval_2.ig, type=\"average\")\n\n\n[1] 0.02889443\n\n\n\ngraph.density(wars_in_medieval_2.ig, loops=TRUE)\n\n\n[1] 0.01466681\n\ngraph.density(wars_in_medieval_3.ig, loops=TRUE)\n\n\n[1] 0.03698225\n\n\n\nlibrary(intergraph)\n\n\n\n\n\nmedieval_network <- asNetwork(wars_in_medieval_2.ig)\n\nmedieval.nodes<-data.frame(name=medieval_network%v%\"vertex.names\", degree=sna::degree(medieval_network))\n\nmedieval.nodes\n\n\n                            name degree\n1               County of Apulia      7\n2               County of Aversa      5\n3              Kingdom of Sicily      8\n4                     Ghaznavids      2\n5              Kingdom of Poland      1\n6             Kingdom of Hungary      3\n7              Kingdom of Norway      1\n8               Hammudid dynasty      1\n9           High King of Ireland      3\n10                       Denmark      1\n11                        Poland      1\n12              Republic of Pisa      1\n13             Republic of Genoa      1\n14            Sardinian judicati      1\n15              Byzantine Empire     18\n16               County of Anjou      1\n17               County of Maine      1\n18                   West Frisia      1\n19           Kingdom of Scotland      1\n20        Kingdom of Strathclyde      1\n21    Mirdasid Emirate of Aleppo      1\n22            Kingdom of Georgia      5\n23                        Duklja      1\n24                  Seljuk Turks      1\n25             Holy Roman Empire     15\n26            Republic of Venice      3\n27           Great Seljuq Empire      4\n28              Sultanate of Rum     11\n29              County of Sicily      9\n30             Kingdom of Aragon      2\n31              County of Urgell      1\n32            Duchy of Aquitaine      1\n33                  Papal States      4\n34                       England      9\n35            Kingdom of Castile      2\n36                      Normandy      3\n37                Welsh kingdoms      1\n38          Principality of Kiev      2\n39     Principality of Chernigov      2\n40  Principality of Pereiaslavl'      2\n41                        Cumans      3\n42                   Kievan Rus'      1\n43            Kingdom of Galicia      1\n44           Kingdom of Castille      1\n45                 Seljuk Empire      7\n46               Georgian Empire      3\n47             Kingdom of France     10\n48 County of Apulia and Calabria      7\n49   Armenian Kingdom of Cilicia      7\n50       Principality of Salerno      3\n51     Principality of Benevento      3\n52         Principality of Capua      3\n53            Republic of Amalfi      3\n54               Duchy of Naples      3\n55                   Kabul Shahi      2\n56          Voivodeship of Ahtum      1\n57                Finnish tribes      1\n58          Caliphate of Córdoba      1\n59                      Leinster      1\n60                        Dublin      1\n61     Vikings of Orkney and Man      1\n62                Taifa of Dénia      3\n63               County of Blois      2\n64             Duchy of Anacopia      1\n65             Duchy of Kldekari      1\n66             Duchy of Klarjeti      1\n67              Ghaznavid Empire      1\n68              Duchy of Bohemia      1\n69                    Kievan Rus      1\n70              Empire of Nicaea      2\n71           Empire of Trebizond      2\n72               Crusader states      2\n73             Emirate of Sicily      2\n74                        Zirids      2\n75               Taifa of Lérida      4\n76             Duchy of Brittany      2\n77            Kingdom of Navarre      1\n78                        Norway      1\n79             Earldom of Orkney      1\n80       Principality of Polotsk      3\n81                     Pechenegs      1\n82                         Ouzes      1\n83                 Veche of kiev      1\n84            County of Portugal      1\n85               Kingdom of León      1\n86              Bulgarian rebels      1\n87       Kerman Seljuk Sultanate      1\n88               Duchy of Saxony      1\n89           Great Seljuk Empire      1\n90         Atabegs of Azerbaijan      1\n91                English rebels      1\n92                Saxon nobility      1\n93             Fatimid Caliphate      6\n94                 Danishmendids      6\n95      Seljuk Emirate of Aleppo      6\n96    Seljuk Emirate of Damascus      6\n97             Abbasid Caliphate      6\n\nsummary(medieval.nodes)\n\n\n     name               degree      \n Length:97          Min.   : 1.000  \n Class :character   1st Qu.: 1.000  \n Mode  :character   Median : 1.000  \n                    Mean   : 2.845  \n                    3rd Qu.: 3.000  \n                    Max.   :18.000  \n\n\n\nmedieval.nodes[order(-medieval.nodes$degree),]\n\n\n                            name degree\n15              Byzantine Empire     18\n25             Holy Roman Empire     15\n28              Sultanate of Rum     11\n47             Kingdom of France     10\n29              County of Sicily      9\n34                       England      9\n3              Kingdom of Sicily      8\n1               County of Apulia      7\n45                 Seljuk Empire      7\n48 County of Apulia and Calabria      7\n49   Armenian Kingdom of Cilicia      7\n93             Fatimid Caliphate      6\n94                 Danishmendids      6\n95      Seljuk Emirate of Aleppo      6\n96    Seljuk Emirate of Damascus      6\n97             Abbasid Caliphate      6\n2               County of Aversa      5\n22            Kingdom of Georgia      5\n27           Great Seljuq Empire      4\n33                  Papal States      4\n75               Taifa of Lérida      4\n6             Kingdom of Hungary      3\n9           High King of Ireland      3\n26            Republic of Venice      3\n36                      Normandy      3\n41                        Cumans      3\n46               Georgian Empire      3\n50       Principality of Salerno      3\n51     Principality of Benevento      3\n52         Principality of Capua      3\n53            Republic of Amalfi      3\n54               Duchy of Naples      3\n62                Taifa of Dénia      3\n80       Principality of Polotsk      3\n4                     Ghaznavids      2\n30             Kingdom of Aragon      2\n35            Kingdom of Castile      2\n38          Principality of Kiev      2\n39     Principality of Chernigov      2\n40  Principality of Pereiaslavl'      2\n55                   Kabul Shahi      2\n63               County of Blois      2\n70              Empire of Nicaea      2\n71           Empire of Trebizond      2\n72               Crusader states      2\n73             Emirate of Sicily      2\n74                        Zirids      2\n76             Duchy of Brittany      2\n5              Kingdom of Poland      1\n7              Kingdom of Norway      1\n8               Hammudid dynasty      1\n10                       Denmark      1\n11                        Poland      1\n12              Republic of Pisa      1\n13             Republic of Genoa      1\n14            Sardinian judicati      1\n16               County of Anjou      1\n17               County of Maine      1\n18                   West Frisia      1\n19           Kingdom of Scotland      1\n20        Kingdom of Strathclyde      1\n21    Mirdasid Emirate of Aleppo      1\n23                        Duklja      1\n24                  Seljuk Turks      1\n31              County of Urgell      1\n32            Duchy of Aquitaine      1\n37                Welsh kingdoms      1\n42                   Kievan Rus'      1\n43            Kingdom of Galicia      1\n44           Kingdom of Castille      1\n56          Voivodeship of Ahtum      1\n57                Finnish tribes      1\n58          Caliphate of Córdoba      1\n59                      Leinster      1\n60                        Dublin      1\n61     Vikings of Orkney and Man      1\n64             Duchy of Anacopia      1\n65             Duchy of Kldekari      1\n66             Duchy of Klarjeti      1\n67              Ghaznavid Empire      1\n68              Duchy of Bohemia      1\n69                    Kievan Rus      1\n77            Kingdom of Navarre      1\n78                        Norway      1\n79             Earldom of Orkney      1\n81                     Pechenegs      1\n82                         Ouzes      1\n83                 Veche of kiev      1\n84            County of Portugal      1\n85               Kingdom of León      1\n86              Bulgarian rebels      1\n87       Kerman Seljuk Sultanate      1\n88               Duchy of Saxony      1\n89           Great Seljuk Empire      1\n90         Atabegs of Azerbaijan      1\n91                English rebels      1\n92                Saxon nobility      1\n\n\n\nsummary(medieval.nodes)\n\n\n     name               degree      \n Length:97          Min.   : 1.000  \n Class :character   1st Qu.: 1.000  \n Mode  :character   Median : 1.000  \n                    Mean   : 2.845  \n                    3rd Qu.: 3.000  \n                    Max.   :18.000  \n\n\n\n\n",
    "preview": "posts/2022-02-10-workwithmedievalnetworks/workwithmedievalnetworks_files/figure-html5/unnamed-chunk-4-1.png",
    "last_modified": "2022-02-10T20:30:11-05:00",
    "input_file": "workwithmedievalnetworks.knit.md",
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2022-02-07-florentine-families-week-3-assignment/",
    "title": "Florentine Families Week 3 Assignment",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Noah Milstein",
        "url": {}
      }
    ],
    "date": "2022-02-07",
    "categories": [],
    "contents": "\n\n\n\n\n\nset.seed(1)\ncanvas_flow(colors = colorPalette(\"vrolik3\"), lines = 3000, lwd = 0.5,\n            iterations = 1000, stepmax = 0.1, angles = 'svm')\n\n\n\n# see ?canvas_flow for more input parameters of this function\n\n\n\nData Description:\n\n\ndata(flo, package=\"network\")\n\n\nstatted_florentine<-as.network(flo)\n\nprint(statted_florentine)\n\n\n Network attributes:\n  vertices = 16 \n  directed = TRUE \n  hyper = FALSE \n  loops = FALSE \n  multiple = FALSE \n  bipartite = FALSE \n  total edges= 40 \n    missing edges= 0 \n    non-missing edges= 40 \n\n Vertex attribute names: \n    vertex.names \n\nNo edge attributes\n\n\n\nplot(statted_florentine)\n\n\n\n\nNodes and Edges:\nAs can be seen from the graph and summary statistics above the florentine family dataset is made up of 40 edges and 16 vertices. Each vertex or node is a family in florence. Each edge, or tie represents a marriage between the two.\nAs a result the ties are not weighted, so they are binary. However, though the dataset labels the ties are directed, they are actually all mutual so in essence, the dataset does not measure marriaage “into” a family but simply uses a mutual directed tie for every set of families with a marriage between them.\n\n\nsna::dyad.census(statted_florentine)\n\n\n     Mut Asym Null\n[1,]  20    0  100\n\nAs can be seen from the code above the dyads within the dataset are either mutual or null, meaning that between any two nodes there are no asymmetric dyads despite the fact that the network is labeled as being directed.\n\n\nsna::triad.census(statted_florentine)\n\n\n     003 012 102 021D 021U 021C 111D 111U 030T 030C 201 120D 120U\n[1,] 324   0 195    0    0    0    0    0    0    0  38    0    0\n     120C 210 300\n[1,]    0   0   3\n\nAs can be seen from the triad census above the types of triads in the dataset are 324 of the 003-type, 102 of the 102-type, 38 of the 201-type and 3 of the 300-type. The 324 of 003-type and 195 of the 102-type indicate that 519 of the 560 triads are vacuously transitive, the remaining 38 of the 201-type are intransitive and only the 3 300-types are transitive\nTransitivity\nAs can be seen in the code below indicates the the transitivity of the network as a whole is 0.1914894, which follows from the results above. This would indicate a relatively low rate of transitivity and thus low inter-connectedness of the nodes and potientally lower density overall.\n\n\ngtrans(statted_florentine)\n\n\n[1] 0.1914894\n\nIsolates\nThough the code below indicates that there are 12 isolates in the network, the data from our plot suggests that this is likely untrue and due to the discrepancy between the un-directed true nature of the network and its label as directed as a network object.\n\n\nisolates(statted_florentine)\n\n\n[1] 12\n\nDensity\nAs indicated by the code chunk below network density here is 0.1666667 indicating that only 16.67% of possible ties in the network are made.\n\n\nnetwork.density(statted_florentine)\n\n\n[1] 0.1666667\n\nDegree and Interesting Results\nEach of the 16 node’s degrees are acquired from the code bellow in integer form, from the digits alone it is difficult to distinguish any sort of overall pattern in the data.\n\n\nsna::degree(statted_florentine)\n\n\n [1]  2  6  4  6  6  2  8  2 12  2  6  0  6  4  8  6\n\nBelow I create a data frame with the overall degree of each family.\n\n\nflorentine.nodes<-data.frame(name=statted_florentine%v%\"vertex.names\",\n                             degree=sna::degree(statted_florentine))\nflorentine.nodes\n\n\n           name degree\n1    Acciaiuoli      2\n2       Albizzi      6\n3     Barbadori      4\n4      Bischeri      6\n5    Castellani      6\n6        Ginori      2\n7      Guadagni      8\n8  Lamberteschi      2\n9        Medici     12\n10        Pazzi      2\n11      Peruzzi      6\n12        Pucci      0\n13      Ridolfi      6\n14     Salviati      4\n15      Strozzi      8\n16   Tornabuoni      6\n\nBelow I then calculate each individual nodes indegree and out-degree.\nNotewory Results\nUpon running the above code I realized that despite the network being labeled “directed” all of its ties were actually mutual and thus the in-degree and out-degree would be identical since marriage is considered mutual. Though this follows from the fact that are generally considered mutual it is interesting to observe that marriages are not considered “into” another family but are represented as a mutual, but directed ties between nodes in every case.\n\n\nsna::degree(statted_florentine, cmode=\"indegree\")\n\n\n [1] 1 3 2 3 3 1 4 1 6 1 3 0 3 2 4 3\n\nsna::degree(statted_florentine, cmode=\"outdegree\")\n\n\n [1] 1 3 2 3 3 1 4 1 6 1 3 0 3 2 4 3\n\nAs can be seen from the code above each node has identical in-degrees and out-degrees\n\n\nflorentine.nodes <- data.frame(name=statted_florentine%v%\"vertex.names\",\n    totdegree=sna::degree(statted_florentine),\n    indegree=sna::degree(statted_florentine, cmode=\"indegree\"),\n    outdegree=sna::degree(statted_florentine, cmode=\"outdegree\"))\n\nflorentine.nodes\n\n\n           name totdegree indegree outdegree\n1    Acciaiuoli         2        1         1\n2       Albizzi         6        3         3\n3     Barbadori         4        2         2\n4      Bischeri         6        3         3\n5    Castellani         6        3         3\n6        Ginori         2        1         1\n7      Guadagni         8        4         4\n8  Lamberteschi         2        1         1\n9        Medici        12        6         6\n10        Pazzi         2        1         1\n11      Peruzzi         6        3         3\n12        Pucci         0        0         0\n13      Ridolfi         6        3         3\n14     Salviati         4        2         2\n15      Strozzi         8        4         4\n16   Tornabuoni         6        3         3\n\nThe notion is confirmed by the degree summaries in the code below and the table above. In both cases all indicators are identical for both in-degree and out-degree and sum to the values seen in the total-degree column.\n\n\nsummary(florentine.nodes)\n\n\n     name             totdegree     indegree     outdegree  \n Length:16          Min.   : 0   Min.   :0.0   Min.   :0.0  \n Class :character   1st Qu.: 2   1st Qu.:1.0   1st Qu.:1.0  \n Mode  :character   Median : 6   Median :3.0   Median :3.0  \n                    Mean   : 5   Mean   :2.5   Mean   :2.5  \n                    3rd Qu.: 6   3rd Qu.:3.0   3rd Qu.:3.0  \n                    Max.   :12   Max.   :6.0   Max.   :6.0  \n\nHistograms of the distribution of the degrees also illustrate that the only difference between in-degree, out-degree, and total degree is that total degree has values twice as large for marriages but the same relative frequency.\n\n\nhist(florentine.nodes$totdegree, main=\"Florentine Marriages: Total Degrees\", xlab=\"Marriages\")\n\n\n\n\n\n\nhist(florentine.nodes$indegree, main=\"Florentine Marriages: In-Degrees\", xlab=\"Marriages\")\n\n\n\n\n\n\nhist(florentine.nodes$outdegree, main=\"Florentine Marriages: Out-Degrees\", xlab=\"Marriages\")\n\n\n\n\nThese results do make degree analysis ineffectual on the dataset, but offer some potential questions. Specifically it would be useful to look at dynamics of marriages “into” other families as this would have been important at the time. Though marriage is considered symmetric in this dataset it was often used in asymmetric ways during the medieval and renaissance times as a means of diplomacy and establishing goodwill between nobility and as a result the ties between the families are not necessarily symmetric in all cases. It would be interesting to see married into what families in terms of sex and birth status hierarchy i.e. first, second, third born, etc.\n\n\nflo_sorted_by_total_degree<-florentine.nodes[order(-florentine.nodes$totdegree),]\n\nflo_sorted_by_total_degree\n\n\n           name totdegree indegree outdegree\n9        Medici        12        6         6\n7      Guadagni         8        4         4\n15      Strozzi         8        4         4\n2       Albizzi         6        3         3\n4      Bischeri         6        3         3\n5    Castellani         6        3         3\n11      Peruzzi         6        3         3\n13      Ridolfi         6        3         3\n16   Tornabuoni         6        3         3\n3     Barbadori         4        2         2\n14     Salviati         4        2         2\n1    Acciaiuoli         2        1         1\n6        Ginori         2        1         1\n8  Lamberteschi         2        1         1\n10        Pazzi         2        1         1\n12        Pucci         0        0         0\n\nThe results above indicate that the medici family are the most “central” node in the network having the most marriages and thus the most in-degrees and out-degrees. The mean of these two degrees is 2.5 in the dataset thus they have more than double the average marriages, however 4 other families have just 2, while the pucci’s have no ties.\nThis also poses the question as to whether or not there are more families that could be included and what the criteria was for allowance in the florentine family data. In this case 4-6 marriages is the most common with 6 nodes having 4-6 marriages.\nThe least central are the Pucci family who are included in the dataset but have no edges or connections to others families by marriage. The Acciaiuoli, Ginori, Lamberteschi, and Pazzi all have 2 total ties, one in and one out representing a single marriage.\n\n\ncentralization(statted_florentine, degree, cmode=\"indegree\")\n\n\n[1] 0.2488889\n\nThe measure of centralization above represents how concentrated edges between nodes are concentrated among actors. He centralization is slightly less than 25% which would indicate that concentration is relatively low this follows from the low transitivity of the network as a whole, there very few actual connections as compared to the possible connections. As a result of these findings it appears as if the network is not extremely centralized with most families having 2-3 marriages with the largest only being 6. The network also has a low level of transitivity as most nodes are not connected to one another.\nHowever it is important to note that we do not know aspects certain aspects of the families that are relevant to understanding the extent of the network’s true connectivity, this could be heirs with ties to both families marriages and the number of marriages between families that happened out of the possible number afforded to each family by their number of heirs. Having family tree measurements would allow for more meaningful analysis that could make the network truly directed by seeing who married into what family and what they represented to their families in terms of succession including their effects in creating prior generations that continued these connections.\n\n\n\n",
    "preview": "posts/2022-02-07-florentine-families-week-3-assignment/florentine-families-week-3-assignment_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2022-02-10T20:32:18-05:00",
    "input_file": "florentine-families-week-3-assignment.knit.md",
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2022-01-31-homework2network/",
    "title": "Homework_2_Network",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Noah Milstein",
        "url": {}
      }
    ],
    "date": "2022-01-31",
    "categories": [],
    "contents": "\n\n\nlibrary(network)\n\nlibrary(igraph)\n\nlibrary(aRtsy)\n\n\n\n\n\nset.seed(1)\ncanvas_diamonds(colors = colorPalette(\"klimt\"))\n\n\n\n\n\n\ndata(flo, package=\"network\")\n\nmatrix <- as.matrix(flo) \n\nflorentine<- graph.adjacency(flo, mode=\"directed\", weighted=NULL)\n\n\nplot(florentine)\n\n\n\n\n\n\nvcount(florentine)\n\n\n[1] 16\n\necount(florentine)\n\n\n[1] 40\n\n\n\n\n",
    "preview": "posts/2022-01-31-homework2network/homework2network_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2022-02-01T13:11:48-05:00",
    "input_file": "homework2network.knit.md",
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2022-01-31-the-sharpe-ratio/",
    "title": "Initial Network Analysis Florentine Family",
    "description": "Homework 2: Brief Analysis of the Florentine Family Set",
    "author": [
      {
        "name": "Noah Milstein",
        "url": {}
      }
    ],
    "date": "2022-01-31",
    "categories": [],
    "contents": "\n\n\n\n\n\n\nChosen Network:\nThe Network I chose was the Florentine family dataset network from the network package. This dataset represents marriages between influential families in Florence. Each node represents a family with arrows indicating which family married into which other family.\nNetwork Size:\nNetwork size for the Florentine Family network dataset is described briefly by the code below:\n\n\nset.seed(2)\n# I access the florentine families dataset through the package \"network\"\n\ndata(flo, package=\"network\")\n\n# In order to make the dataset usable I make it into a matrix using as.matrix()\n\nmatrix_florentine <- as.matrix(flo) \n\n# Next I used the graph.adjacency command to make the florentine dataset into\n# An Adjacency Matrix \n\nflorentine<- graph.adjacency(flo, mode=\"directed\", weighted=NULL)\n\nplot(florentine, vertex.color=\"skyblue1\", vertex.label.color=\"navy\", \n     vertex.label.dist=1, vertex.size=7,  edge.arrow.size=0.5, margin=0000)\n\n\n\n\n\n\nvcount(florentine)\n\n\n[1] 16\n\necount(florentine)\n\n\n[1] 40\n\n\n\nstatted_florentine<-as.network(matrix_florentine)\nprint(statted_florentine)\n\n\n Network attributes:\n  vertices = 16 \n  directed = TRUE \n  hyper = FALSE \n  loops = FALSE \n  multiple = FALSE \n  bipartite = FALSE \n  total edges= 40 \n    missing edges= 0 \n    non-missing edges= 40 \n\n Vertex attribute names: \n    vertex.names \n\nNo edge attributes\n\nThe number of vertices in the dataset is 16, in this case these nodes each represent a florentine family. Te number of edges is 40. In this instance ties or edges, represent marriages between these influential families. The is the same in both the statnet and igraph outputs.\nNetwork Features\nNext the features of the dataset are described using the 3 commands in the code chunk below.\n\n\nis_bipartite(florentine)\n\n\n[1] FALSE\n\nis_directed(florentine)\n\n\n[1] TRUE\n\nis_weighted(florentine)\n\n\n[1] FALSE\n\nThese results suggests that the florentine family dataset is not bipartite, which would indicate that they do not fall into to sets. In addition the dataset’s ties are directed do they flow in directions as a result of which family is marrying to which, and the ties are unweighted because marriage cannot vary in numerican significance, it is simply a category that is either true or false between families.\n\n\nvertex_attr_names(florentine)\n\n\n[1] \"name\"\n\nedge_attr_names(florentine)\n\n\ncharacter(0)\n\n\n\nnetwork::list.vertex.attributes(statted_florentine)\n\n\n[1] \"na\"           \"vertex.names\"\n\nnetwork::list.edge.attributes(statted_florentine)\n\n\n[1] \"na\"\n\nThe vector attribute names are the names of the florentine families.\nThe edge attributes do not have name.\nDyad and Triad Census\nDyads\n\n\nigraph::dyad.census(florentine)\n\n\n$mut\n[1] 20\n\n$asym\n[1] 0\n\n$null\n[1] 100\n\n\n\nsna::dyad.census(statted_florentine)\n\n\n     Mut Asym Null\n[1,]  20    0  100\n\nThe dyad census indicates that amongest that among the dyad ties, being between 2 families, 20 are mutual and none are asymptotic. In addition 100 of the dyad are null, or not connected.\nTriads\n\n\nigraph::triad_census(florentine)\n\n\n [1] 324   0 195   0   0   0   0   0   0   0  38   0   0   0   0   3\n\n?triad_census(florentine)\n\n\n\n\n\nsna::triad.census(statted_florentine, mode=\"graph\")\n\n\n       0   1  2 3\n[1,] 324 195 38 3\n\n\n\nsum(sna::triad.census(statted_florentine, mode=\"graph\"))\n\n\n[1] 560\n\nFor dyads there are 16 possibilities. Here our results are as follows:\n324, 003 (A,B,C, the empty graph.)\n195, 102 (A<->B, C, the graph with a mutual connection between two vertices.)\nboth of which are vacuously transitive\n38, 030C (A<-B<-C, A->C.)\n3, 300 (A<->B<->C, A<->C, the complete graph.)\nwhich are both transitive\nBoth statnet and igraph confirm this, however igraph specifies the exact instances of each type of connection.\nNetwork Transitivity\n\n\ntransitivity(florentine, type=\"global\")\n\n\n[1] 0.1914894\n\nThe global transitivity of the graph is 0.1914894 which is the ratio of triangles to connected triangles.\n\n\ntransitivity(florentine, type=\"average\")\n\n\n[1] 0.2181818\n\nThe average transitivity is the average transitivity of local triad clusters. Here it is 0.2181818. This is the ratio of local triangles to all connected triangles.\n\n\ngtrans(statted_florentine)\n\n\n[1] 0.1914894\n\nStatnet code confirms this transitivity assessment.\n\n\nV(florentine)[c(\"Peruzzi\",\"Lamberteschi\", \"Ginori\")]\n\n\n+ 3/16 vertices, named, from e7ac6d4:\n[1] Peruzzi      Lamberteschi Ginori      \n\nNetwork Distances\nFirst we see that the average path length between 2 nodes in our dataset is 2.485714\n\n\naverage.path.length(florentine,directed=F)\n\n\n[1] 2.485714\n\nI then test the distances between 3 families, those being the Peruzzi, Lamberteschi, and Ginori\n\n\ndistances(florentine,\"Peruzzi\", \"Lamberteschi\")\n\n\n        Lamberteschi\nPeruzzi            3\n\nThe distance between the nodes of Peruzzi and Lamberteschi is 3\n\n\ndistances(florentine,\"Peruzzi\", \"Ginori\")\n\n\n        Ginori\nPeruzzi      4\n\nThe distance between the nodes of Peruzzi and Ginori is 4\n\n\ndistances(florentine,\"Lamberteschi\",\"Ginori\")\n\n\n             Ginori\nLamberteschi      3\n\nThe distance between the nodes of Lamberteschi and Ginori is 3.\n\n\nisolates(statted_florentine)\n\n\n[1] 12\n\nThe names of all families in our dataset is as follows:\n\n\nas.vector(statted_florentine%v%'vertex.names')\n\n\n [1] \"Acciaiuoli\"   \"Albizzi\"      \"Barbadori\"    \"Bischeri\"    \n [5] \"Castellani\"   \"Ginori\"       \"Guadagni\"     \"Lamberteschi\"\n [9] \"Medici\"       \"Pazzi\"        \"Peruzzi\"      \"Pucci\"       \n[13] \"Ridolfi\"      \"Salviati\"     \"Strozzi\"      \"Tornabuoni\"  \n\nThe names of the isolated influential families is as follows below:\n\n\nas.vector(statted_florentine%v%'vertex.names')[c(isolates(statted_florentine))]\n\n\n[1] \"Pucci\"\n\n\n\n\n",
    "preview": "posts/2022-01-31-the-sharpe-ratio/Homework_2_Noah_Milstein_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2022-02-02T23:34:49-05:00",
    "input_file": "Homework_2_Noah_Milstein.knit.md",
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to My Blog!",
    "description": "This is my New blog for code relating to Political and Social Networks",
    "author": [
      {
        "name": "Noah Milstein",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2022-01-31",
    "categories": [],
    "contents": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "preview": "posts/welcome/welcome_files/figure-html5/unnamed-chunk-5-1.png",
    "last_modified": "2022-02-03T13:53:55-05:00",
    "input_file": "welcome.knit.md",
    "preview_width": 1248,
    "preview_height": 768
  }
]
